name: Image build
on:
  - workflow_call
  - workflow_dispatch

env:
  COMPOSE_FILE: compose.ci.yml

jobs:
  image-build:
    runs-on:
      - ubuntu-latest
    outputs:
      docker_image_tag_ci: ${{ steps.generate_docker_image_tag.outputs.docker_image_tag_ci }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare for build
        id: prepare-for-build
        run: |
          cp .env.example .env
          echo "WWWUSER=$(id -u)" >> $GITHUB_OUTPUT
          echo "WWWGROUP=$(id -g)" >> $GITHUB_OUTPUT
      - name: Cache Docker Build Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-build-cache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            docker-build-cache-${{ github.ref }}
            docker-build-cache-
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Generate Docker Image Tag
        id: generate_docker_image_tag
        run: |
          SHA=${{ github.sha }}
          TAG=$(TZ=UTC-9 date '+%Y%m')-${SHA:0:7}
          echo "DOCKER_IMAGE_TAG_CI=$TAG" >> $GITHUB_ENV
          echo TAG $TAG
          echo "docker_image_tag_ci=$TAG" >> $GITHUB_OUTPUT
      - name: Cache Docker Registry
        uses: actions/cache@v3
        with:
          path: /tmp/docker-registry
          key: docker-registry-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            docker-registry-${{ github.ref }}
            docker-registry-
      - name: Boot-up Local Docker Registry
        run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2
      - name: Wait for Docker Registry
        run: npx wait-on tcp:5000
      - name: Build Docker Image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker buildx bake \
              --builder="${{ steps.buildx.outputs.name }}" \
              --set='*.cache-from=type=local,src=/tmp/.buildx-cache' \
              --set='*.cache-to=type=local,dest=/tmp/.buildx-cache' \
              --set='{laravel.test}.args.WWWUSER=${{ steps.prepare-for-build.outputs.WWWUSER }}' \
              --set='{laravel.test}.args.WWWGROUP=${{ steps.prepare-for-build.outputs.WWWGROUP }}' \
              --push \
              -f "${COMPOSE_FILE}"
